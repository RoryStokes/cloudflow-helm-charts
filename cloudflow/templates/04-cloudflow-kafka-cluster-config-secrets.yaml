{{/* Create a 'default' named cluster if a 'kafkaClusters.default.kafkaBootstrapservers' value is */}}
{{/* provided. Add any other non-default named clusters found in the 'kafkaClusters'.             */}}
{{- if ($.Values.kafkaClusters.default.bootstrapServers) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Chart.Name }}-kafka-cluster-default
  labels:
    cloudflow.lightbend.com/kafka-cluster-name: default
    {{- include "cloudflow.labels" $ | indent 4 }}
type: Opaque
stringData:
  secret.conf: |
    bootstrap.servers = {{ quote $.Values.kafkaClusters.default.bootstrapServers }}
    partitions = {{ $.Values.kafkaClusters.default.partitions }}
    replicas = {{ $.Values.kafkaClusters.default.replicas }}
    connection-config = {
      {{- range $key, $val := $.Values.kafkaClusters.default.connectionConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    producer-config = {
      {{- range $key, $val := $.Values.kafkaClusters.default.producerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    consumer-config = {
      {{- range $key, $val := $.Values.kafkaClusters.default.consumerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
{{- end }}
{{- range $clusterName, $cluster := .Values.kafkaClusters }}
{{- if (ne $clusterName "default") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Chart.Name }}-kafka-cluster-{{ $clusterName }}
  labels:
    cloudflow.lightbend.com/kafka-cluster-name: {{ $clusterName }}
    {{- include "cloudflow.labels" $ | indent 4 }}
type: Opaque
stringData:
  secret.conf: |
    bootstrap.servers = {{ quote $cluster.bootstrapServers }}
    partitions = {{ $cluster.partitions }}
    replicas = {{ $cluster.replicas }}
    connection-config = {
      {{- range $key, $val := $cluster.connectionConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    producer-config = {
      {{- range $key, $val := $cluster.producerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    consumer-config = {
      {{- range $key, $val := $cluster.consumerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
{{- end }}
{{- end }}
