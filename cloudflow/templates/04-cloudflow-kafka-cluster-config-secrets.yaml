{{/* If a 'kafkaBootstrapservers' is provided create a kafka-cluster secret named 'default' and */}}
{{/* add any other non-default kafka-cluster configurations found in the 'kafkaClusters' of     */}}
{{/* the values.yaml file. */}}
{{- if .Values.cloudflow_operator.kafkaBootstrapservers }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Chart.Name }}-kafka-cluster-default
  labels:
    cloudflow.lightbend.com/kafka-cluster-name: default
    {{- include "cloudflow.labels" $ | indent 4 }}
type: Opaque
stringData:
  secret.conf: |
    bootstrap.servers = {{ quote .Values.cloudflow_operator.kafkaBootstrapservers }}
{{- end }}
{{- range $cluster := .Values.kafkaClusters }}
{{- if or (ne $cluster.name "default") (empty $.Values.cloudflow_operator.kafkaBootstrapservers) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Chart.Name }}-kafka-cluster-{{ $cluster.name }}
  labels:
    cloudflow.lightbend.com/kafka-cluster-name: {{ $cluster.name }}
    {{- include "cloudflow.labels" $ | indent 4 }}
type: Opaque
stringData:
  secret.conf: |
    bootstrap.servers = {{ quote $cluster.bootstrapServers }}
    partitions = {{ $cluster.partitions }}
    replicas = {{ $cluster.replicas }}
    connection-config = {
      {{- range $key, $val := $cluster.connectionConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    producer-config = {
      {{- range $key, $val := $cluster.producerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
    consumer-config = {
      {{- range $key, $val := $cluster.consumerConfig }}
      {{ $key }} = {{ quote $val }}
      {{- end }}
    }
{{- end }}
{{- end }}
